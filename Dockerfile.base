# ledermann/docker-rails-base：https://github.com/ledermann/docker-rails-base
FROM ruby:2.7-alpine
LABEL maintainer="jiujiubad@gmail.com"

# 安装 apk
RUN apk add --update --no-cache build-base git nodejs yarn tzdata libxml2-dev postgresql-dev mysql-dev mariadb-dev

WORKDIR /app

# 安装 node（构建基础镜像时，适合用 --frozen-lockfile 锁住版本）
COPY package.json yarn.lock /app/
RUN yarn install --frozen-lockfile

# 安装 gem（同 yarn 在构建基础镜像时用 lock 锁住版本）
COPY Gemfile Gemfile.lock /app/
RUN gem install bundler && \
       bundle config --local frozen 1 && \
       bundle config --local build.sassc --disable-march-tune-native && \
       bundle config set without 'development test' && \
       bundle install -j 4 -r 3

#>> ONBUILD：延迟到下一个镜像 build 时才执行，好处是不同机器会按自己最新的 Gemfile.lock 下载 gem、按最新的代码编译

# 更新 gem
ONBUILD COPY Gemfile Gemfile.lock /app/
ONBUILD RUN  gem install bundler && \
                      bundle config set without 'development test' && \
                      bundle install -j 4 -r 3 && \
                      bundle clean --force && \
                      rm -rf vendor/bundle vendor/cache /usr/local/bundle/cache/*.gem && \
                      find /usr/local/bundle/gems/ -name "*.c" -delete && \
                      find /usr/local/bundle/gems/ -name "*.o" -delete

# 复制本地项目到容器中
ONBUILD COPY . /app

# 编译
# rails assets:precompile 会执行 assets:compile 和 webpacker:compile，包括 yarn install
# RAILS_ENV=production 指定要编译的环境，以解决报错 ERROR: bundle exec rails assets:precompile' returned a non-zero code
# 重命名 credentials.yml.enc（相当于把它隐藏掉），使用假的 KEY 就可以继续编译，以解决报错 MessageEncryptor、MissingKeyError
ONBUILD RUN mv config/credentials.yml.enc config/credentials.yml.enc.bak 2>/dev/null || true
ONBUILD RUN RAILS_ENV=production SECRET_KEY_BASE=123 RAILS_MASTER_KEY=123 bundle exec rails assets:precompile
ONBUILD RUN mv config/credentials.yml.enc.bak config/credentials.yml.enc 2>/dev/null || true

# 删除多余的文件
# yarn 会缓存所有下载的包（yarn cache dir 查看路径），因为上一步编译过程执行的 yarn install 会有缓存，所以可删除 node_modules，详见 https://classic.yarnpkg.com/zh-Hans/docs/cli/cache
ONBUILD RUN rm -rf node_modules tmp/cache vendor/bundle test spec
